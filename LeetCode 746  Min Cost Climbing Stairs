class Solution {
public:
int dp[2000];
int solve(vector<int>& cost,int n){
    if(n==0)
    return cost[0];
    if(n==1)
    return cost[1];
    if(dp[n]!=-1){
        return dp[n];
    }
     dp[n]=cost[n]+min(solve(cost,n-1),solve(cost,n-2));
    return dp[n];
}
    int minCostClimbingStairs(vector<int>& cost) {
        memset(dp,-1,sizeof(dp));
        int n=cost.size();
      int ans=min(solve(cost,n-1),solve(cost,n-2));  
      return ans;
    }
};
